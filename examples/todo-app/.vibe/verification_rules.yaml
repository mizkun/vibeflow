# Verification rules for each step

verification_rules:
  # Step 2: Issue Breakdown
  2_issue_breakdown:
    pre_conditions: []
    post_conditions:
      - type: "file_exists"
        path: "issues/*.md"
        min_count: 1
        error_message: "No issue files created"
      - type: "file_contains"
        path: "issues/*.md"
        must_contain: ["## Overview", "## Acceptance Criteria"]
        error_message: "Issue files missing required sections"
  
  # Step 4: Test Writing
  4_test_writing:
    pre_conditions:
      - type: "file_exists"
        path: "issues/*.md"
        min_count: 1
        error_message: "No issues found to work on"
    post_conditions:
      - type: "file_exists"
        path_pattern: "**/*test*"
        min_count: 1
        error_message: "No test files created"
      - type: "command_exit_code"
        command: "npm test || pytest || go test ./... || cargo test || echo 'No test runner found'"
        expected_code: 1  # Tests should fail initially
        error_message: "Tests should be failing at this stage"
  
  # Step 5: Implementation
  5_implementation:
    pre_conditions:
      - type: "tests_exist"
        error_message: "No tests found to implement against"
    post_conditions:
      - type: "tests_passing"
        error_message: "Tests are not passing after implementation"
      - type: "source_files_created"
        error_message: "No source files created"
  
  # Step 6: Refactoring
  6_refactoring:
    pre_conditions:
      - type: "tests_passing"
        error_message: "Tests must be passing before refactoring"
    post_conditions:
      - type: "tests_passing"
        error_message: "Tests broken during refactoring"
      - type: "no_new_issues"
        error_message: "New issues introduced during refactoring"
  
  # Step 7: Acceptance Test
  7_acceptance_test:
    pre_conditions:
      - type: "tests_passing"
        error_message: "All tests must pass before acceptance testing"
    post_conditions:
      - type: "acceptance_criteria_met"
        error_message: "Not all acceptance criteria are met"
  
  # Step 8: Pull Request
  8_pull_request:
    pre_conditions:
      - type: "clean_working_tree"
        error_message: "Working tree must be clean"
      - type: "branch_exists"
        error_message: "Feature branch must exist"
    post_conditions:
      - type: "pr_created"
        error_message: "Pull request was not created"
  
  # Step 10: Merge
  10_merge:
    pre_conditions:
      - type: "pr_approved"
        error_message: "PR must be approved before merging"
    post_conditions:
      - type: "merged_to_main"
        error_message: "Changes not merged to main branch"
